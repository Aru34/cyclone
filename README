Tornado's API for Twisted

WHY?

I won't use Tornado, because it's just a web framework. However,
the API is pretty clean and straightforward.

I currently use Twisted Web for all of my production systems, and
tons of lab stuff. However, it's much more an API for building
"servers" than "web applications".

Tornado doesn't provide support for any other protocol than HTTP.
On the other hand, Twisted is a powerful I/O library for high
quality, production software.

This piece of software is not just a merge between Tornado and
Twisted Web. Actually, cyclone has nothing to do with Twisted Web.

I'll let the Twisted Web on its own way, like providing backend
for Application Servers like Divmod.org.


THE API

Although Tornado's API is better (IMHO) for building web 
applications, it's not perfect for a Twisted environment.

I modified some parts of Tornado in order to make it more
Twisted-like. Here's a list:

1. No WSGI support.
   If you're here, you probably want to take advantage of an
   asynchronous web application. WSGI doesn't provide support
   for long polling.

2. No database support.
   The MySQL wrapper shipped with Tornado isn't needed when
   you have something like twisted.enterprise.adbapi.

3. No pycurl.
   A slightly modified version of twisted.web.client adds better
   support for fetching web pages. I don't like getPage myself
   because it doesn't give the response headers, and they're
   often useful for several reasons.

4. S3 server, maybe.
   It currently has no S3 support, but that could be useful.

5. Twistd support
   Cyclone applications can be deployed as TAC and that's
   perfect and well integrated with Twisted.
   See demos/twistd/helloworld.py

6. Keep alive
   Because of HTTP 1.1 support in Tornado, sockets aren't
   always closed when you call self.finish() in a RequestHandler.
   Cyclone let you enforce that by setting the no_keep_alive
   attribute in some of your RequestHandlers.
   See demos/helloworld/helloworld.py

7. Notify finish
   One of the features I like in Twisted Web is the
   request.notifyFinish, and I added that to Cyclone.
   That will return a deferred which will be called when the
   request socket is closed, by self.finish() or by someone
   closing their browser.

8. X headers
   As we often run things like Cyclone behind nginx, it's
   good to make it automatically use X-Real-Ip and X-Scheme
   HTTP headers. Tornado's original implementation doesn't
   match the way we needed it.
   Now, xheaders=True or False is a setting for the Application.
   See demos/helloworld/helloworld.py


INSTALL

  make sure you have simplejson installed, then:
  sudo python setup.py install
